global proc colorCrtls(string $Crtl, int $color)
{
    //Sets color index of the conrtol

    string $shapes[];

    //find the shape node of Crtl
    $shapes = `listRelatives -path -shapes $Crtl`;
    //enable override on $shape
    for ($shape in $shapes)
    {
        if (`nodeType $shape` == "nurbsCurve")
        {
            setAttr ($shape + ".overrideEnabled") 1;
            setAttr ($shape + ".overrideColor") $color;
        }
        else
        {
            warning("selected object is not a curve.");
        }

    }
    //set $Crtl color to $color
}
//run script to this point to load funtion into Maya

global proc string reshape (string $Shapes)
{
   string $control[];

   if ($Shapes == "Circle"){
       $control = `circle -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1`; 
        objectMoveCommand;
   }

   else if ($Shapes == "Square")
   {
        $control[0] = `curve -d 1 -p -0.5 0 -0.5 -p -0.5 0 0.5 -p 0.5 0 0.5 -p 0.5 0 -0.5 -p -0.5 0 -0.5 -k 0 -k 1 -k 2 -k 3 -k 4 `;
        closeCurve -ch 1 -ps 1 -rpo 1 -bb 0.5 -bki 0 -p 0.1;


   }
   else if ($Shapes == "Diamond")
   {
       $control = `circle -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1`; 
        objectMoveCommand;
        select -r nurbsCircle1.cv[2] ;
        select -tgl nurbsCircle1.cv[0] ;
        select -tgl nurbsCircle1.cv[6] ;
        select -tgl nurbsCircle1.cv[4] ;
        scale -r -p 0cm 0cm 0cm 0.165162 0.165162 0.165162 ;
   }
   else if ($Shapes == "Squiggle")
   {
       $control = `circle -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1`; 
        objectMoveCommand;
        select -r nurbsCircle1.ep[1] ;
        select -tgl nurbsCircle1.ep[7] ;
        select -tgl nurbsCircle1.ep[5] ;
        select -tgl nurbsCircle1.ep[3] ;
        scale -r -p 0cm 0cm 0cm 0.00851647 0.00851647 0.00851647 ;
   }
return $control[0];

}

global proc MakeCrtls(string $index, string $nameOshape)
{
    int $queryiedIndex = QueryIntValue($index);
    string $queryiednameShape = QueryMenuItem($nameOshape);
    
    string $SelectedObj[] = `ls -sl`;
    if (size($SelectedObj)>0 )
    {
        for ($selection in $SelectedObj)
        {
            //creates a control
            string $typecrtl = reshape($queryiednameShape);
            colorCrtls($typecrtl, $queryiedIndex);   
            //renames control and saves it into a string so it can be called later
            string $reCrtl = `rename $typecrtl ($selection+ "_Crtl")`;
            //ends new group with suffix_grp
            string $groupies = `group -world -name ($reCrtl+ "_Grp") $reCrtl`;
          
            matchTransform $groupies $selection;
        }
    }
    else {
        string $control = reshape($queryiednameShape);
        string $reCrtl = `rename $control "_Crtl"`;
        colorCrtls($reCrtl,$queryiedIndex);
        string $groupies = `group -world -name ($reCrtl+ "_Grp") $reCrtl`;
        
    }
}

//

global proc string QueryMenuItem(string $objName)
{
    string $text = `optionMenu -q -v $objName`;
    return $text;
}

global proc int QueryIntValue(string $objName)
{
    int $intValue = `colorIndexSliderGrp -q -v $objName`;
    return $intValue;
}

//


global proc CreateCrtlUI()
{
string $mainWindow = "CreateControl Window";
if (`window -exists $mainWindow`)
{
    deleteUI $mainWindow;
}

$mainWindow =`window -title "Create Control" $mainWindow`;
string $mainColumn = `columnLayout -parent $mainWindow -adjustableColumn 1 -rowSpacing 10`;

string $crtlColor = `colorIndexSliderGrp -label "color" -minValue 1 -maxValue 32`;

string $crtlShape = `optionMenu -label "Crtl Shape" -parent $mainColumn -width 250`;

        menuItem -label "Circle";
        menuItem -label "Square";
        menuItem -label "Diamond";
        menuItem -label "Squiggle";

        

string $button = `button -parent $mainColumn -label "Create Control(s)" -command ("MakeCrtls(\"" + $crtlColor + "\", \"" + $crtlShape + "\")")`;


showWindow $mainWindow;
}
